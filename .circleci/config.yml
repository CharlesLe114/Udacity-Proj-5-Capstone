# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
parameters:
  image-name:
    type: string
    default: "capstone-project:latest"
orbs: 
  kubernetes: circleci/kubernetes@1.3.0
commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
      # Add parameter here   
    steps:
      - run:
          name: Destroy cluster
          when: on_fail
          command: |
            eksctl delete cluster --region=$AWS_DEFAULT_REGION --name=k8s-demo

  install-dependencies:
    description: Install dependencies needed for app deployment
    parameters:
      # Add parameter here   
    steps:
      - kubernetes/install-kubectl:
          kubectl-version: "1.23.6" 
      - run:
          name: Install eksctl
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
      
      - run: 
          name: install aws-iam-authenticator
          command: |
            curl -o aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            mkdir -p /usr/local/bin && cp ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator && export PATH=$PATH:/usr/local/bin

      - run: 
          name: install awscli
          command: |
            sudo apt update
            sudo apt install awscli

jobs:
  install-dependencies: 
    docker:
      - image: cimg/python:3.10-node
    steps:
      - checkout
      - install-dependencies
      - save_cache:
          paths:
            - /usr/local/bin
          key: dependencies

  lint-check:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: python:3.7.3-stretch
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run lints!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  docker-build:
    docker:
      - image: circleci/golang:1.15
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: build and upload to docker hub
          command: |
            docker build --tag=$IMAGE_NAME .
            docker images
            docker login -u="lebaotoan" -p="$DOCKERHUB_PASSWORD"
            docker tag $IMAGE_NAME lebaotoan/$IMAGE_NAME
            docker push lebaotoan/$IMAGE_NAME
          environment:
            IMAGE_NAME: << pipeline.parameters.image-name >>

  create-cluster:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      # - run:
      - restore_cache: 
          key: dependencies
      #     name: install dependencies
      #     command: |
      #       curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
      #       mv /tmp/eksctl /usr/local/bin
      - run:
          name: test eskctl
          command: eksctl help

      - run: 
          name: create cluster
          command: |
            eksctl create cluster --name k8s-demo --region $AWS_DEFAULT_REGION --nodegroup-name k8s-demo --nodes 2 --ssh-access --ssh-public-key udacity --managed
      - save_cache:
          paths: [~/.kube/config]
          key: cluster-config
      - destroy-environment
    

  kubectl-test:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - kubernetes/install-kubectl:
          kubectl-version: "1.23.6"
      - restore_cache:
          keys: [cluster-config, dependencies]

      # - run:
      #     name: install dependencies
      #     command: |
      #       curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
      #       mv /tmp/eksctl /usr/local/bin
      - run:
          name: kubectl test
          command: |
            kubectl get nodes
  
  cleanup:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      # - run:
      - restore_cache: 
          key: dependencies
      #     name: install dependencies
      #     command: |
      #       curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
      #       mv /tmp/eksctl /usr/local/bin
      - run:
          name: cleanup
          command: eksctl delete cluster --region=us-east-1 --name=k8s-demo
workflows:
  app-creation:
    jobs:
      - install-dependencies
      - cleanup:
          requires: [install-dependencies]
      - lint-check:
          requires: [install-dependencies]
      - docker-build:
          requires: [lint-check]
      - create-cluster:
          requires: [lint-check]
      - kubectl-test:
          requires: [create-cluster, docker-build]